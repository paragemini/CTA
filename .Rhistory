#setwd("/Users/parag.geminigmail.com/Documents/CTA")
### main statsistics file #############
#tripsByRoute,
#tripsByUniqueStopsRoutes ,
#tripsByTotalStopsRoutes
# View(tripsByRoute)
# View(tripsByUniqueStopsRoutes)
# View(tripsByTotalStopsRoutes)
######## writting own summary function #####
sum_detail <- function(d_frame){
message(str_c("Total Columns : ", ncol(d_frame),
" ; Total Rows : ", nrow(d_frame)))
message(str_c(  "Column Names : ", paste0(colnames(d_frame), collapse = " , ")))
i <- 1
x <- lapply(d_frame, function(x){
if(length(unique(x)) >= 3 ) {
message( str_c( "Name " , i," : ", colnames(d_frame)[i],
" ; Length Unique : ",length(unique(x)),
" ; Values : ", paste0(unique(x)[1:3], collapse = ",") ))
} else {
message( str_c( "Name " , i," : ", colnames(d_frame)[i],
" ; Length Unique  : ",length(unique(x)),
" ; Values : ", paste0(unique(x), collapse = ",")))
}
i <<- i + 1
})
}
scrape_stops <- function(){
routes_f <- routes[ route_type == 3, ]
stops_list <- lapply(1:nrow(routes_f), sum)
stops_list <-   map(1:nrow(routes_f),possibly(
function(x){
print(  str_c(x , " : ", routes_f$route_long_name[x]))
l <- html_table(read_html(str_c("https://www.transitchicago.com/assets/1/6/stoplist_",
routes_f$route_short_name[x],".htm")), header = T)
l[[1]]$route_long_name <- routes_f$route_long_name[x]
l[[1]]$route_short_name <- routes_f$route_short_name[x]
stops_list[[x]] <- l[[1]]
},
otherwise = NA_real_))
names(stops_list) <- routes_f$route_short_name
flat_stops <-  setDT(do.call(rbind.data.frame, stops_list))
return(flat_stops)
}
###### reading files #########
#transfers <- read.csv("transfers.csv")
files_paths <- list.files("C:\\Users\\pgupta\\CTA\\google_transit", full.names = T)
files_names <- list.files("C:\\Users\\pgupta\\CTA\\google_transit")
# files_paths <- list.files("./google_transit", full.names = T)
# files_names <- list.files("./google_transit")
files <- lapply(files_paths, fread)
names(files) <- gsub(pattern = "\\.txt$", replacement = "", x = files_names)
cta_data <- files
### getting GTFS feed separately
routes <- cta_data[["routes"]]
trips <- cta_data[["trips"]]
calendar <- cta_data[["calendar"]]
for( i in 1:nrow(calendar)){
print(i)
days <-  setDT(list(colnames(calendar[,2:8])[which(calendar[i,2:8] == 1)]))
nickDays <- data.frame(V1 = colnames(calendar[1,2:8]),
V2 = c("M","T","W","R","F","SA","SU"))
days <- left_join(days,nickDays, by = "V1" )
calendar$Days[i] <- paste0(days$V2, collapse = ",")
}
stops <- cta_data[["stops"]]
stop_times <- cta_data[["stop_times"]]
shapes <- cta_data[["shapes"]]
#### creating all shapes from shapes.txt by shape_id ############
shape_split <- split(shapes, shapes$shape_id)
shape_geom <- lapply(1:length(shape_split), sum)
for( i in 1:length(shape_split)){
print(i)
shape_geom[[i]] <- st_linestring(as.matrix(shape_split[[i]][ , c(3,2)]))
}
trip_shapes <-st_sf(data.frame(shape_id = names(shape_split),
geometry = st_sfc(shape_geom)), sf_column_name = "geometry",
crs = 4326)
trip_shapes <- left_join(trip_shapes, shapes[ , .(total_distance_ft = shape_dist_traveled[.N]) ,
by = list(shape_id)], by = "shape_id")
trip_shapes$length_mi <- st_length(trip_shapes)/1609.34
View(trip_shapes)
leaflet() %>% addTiles() %>% addPolylines(data = trip_shapes[trip_shapes$shape_id == "306800035",])
25/3
0.33 * 60
leaflet() %>% addTiles() %>% addPolylines(data = trip_shapes[trip_shapes$shape_id == "64802946",])
library(sf)
library(data.table)
library(lehdr)
library(tidycensus)
library(stringr)
library(dplyr)
library(leaflet)
library(tidyr)
library(htmltools)
library(leaflet)
library(rvest)
library(lubridate)
library(purrr)
library(leafgl)
library(tigris)
library(deckgl)
#library(rdeck)
library(sfheaders)
files_paths <- list.files("C:\\Users\\pgupta\\CTA\\google_transit", full.names = T)
files_names <- list.files("C:\\Users\\pgupta\\CTA\\google_transit")
files <- lapply(files_paths, fread)
names(files) <- gsub(pattern = "\\.txt$", replacement = "", x = files_names)
cta_data <- files
# assigning all the value to the variables
routes <- cta_data[["routes"]]
trips <- cta_data[["trips"]]
calendar <- cta_data[["calendar"]]
stops <- cta_data[["stops"]]
stop_times <- cta_data[["stop_times"]]
shapes <- cta_data[["shapes"]]
#getting one master file
master_file <- left_join(
left_join(
left_join(stop_times,
trips[ , c(1,2,3,6,7)],
by = "trip_id"), stops[,c(1,3,5,6)],
by = "stop_id"), calendar[,c(1:10)], by = "service_id")
#functions
return_tod <- function(day_one, type_of_day){
if(type_of_day != "saturday" & type_of_day != "sunday"){
day_tod <- day_one %>%
mutate(TOD = if_else(start_local_hour >= 4 &
start_local_hour < 6, "Early AM",
if_else(start_local_hour >= 6 &
start_local_hour < 9, "AM-Peak",
if_else(start_local_hour >= 9 &
start_local_hour < 15, "Midday",
if_else(start_local_hour >= 15 &
start_local_hour < 19, "PM-Peak",
if_else(start_local_hour >= 19 &
start_local_hour < 23, "Evening", "Late-Night"
)
} else if(type_of_day == "saturday"){
day_tod <- day_one %>%
mutate(TOD = if_else(start_local_hour >= 4 &
start_local_hour < 8, "SAT-AM",
if_else(start_local_hour >= 8 &
start_local_hour < 20, "SAT-MD",
if_else(start_local_hour >= 20 , "SAT-PM", "Late-Night"
)
} else if(type_of_day == "sunday"){
day_tod <- day_one %>%
mutate(TOD = if_else(start_local_hour >= 0 &
start_local_hour < 5, "SUN-EA",
if_else(start_local_hour >= 5 &
start_local_hour < 9, "SUN-AM",
if_else(start_local_hour >= 9 &
start_local_hour < 18, "SUN-MD", "SUN-PM"
)
}
return(day_tod)
}
return_routes_time <- function( master_f){
days <- c("monday","tuesday","wednesday","thursday",
"friday","saturday","sunday")
days_split <- lapply(days, function(x){
day_one <-   master_f[master_f[[x]] == 1,]
day_one <- return_tod(day_one = day_one, type_of_day = x)
return(day_one)
})
names(days_split) <- days
i <- 0
expt_2 <- lapply(days_split, function(x){
i <<- i + 1
return(
x[ , .(Min_Stop_Sequence = min(stop_sequence),
Max_Stop_Sequence = max(stop_sequence),
Min_Arrival_Time = min(start_time),
Max_Departure_Time = max(end_time),
trips = length(unique(trip_id)),
trp_ids = trip_id[which.max(stop_sequence)],
max_shape_id = shape_id[which.max(stop_sequence)],
max_shape_distance = shape_dist_traveled[which.max(stop_sequence)],
Day = days[i]
),
by = list(route_id, direction, TOD)][ ,
`:=`(Min_Arrival_Time = str_pad(Min_Arrival_Time,6,side = "left",pad = "0"),
Max_Departure_Time = str_pad(Max_Departure_Time,6,side = "left",pad = "0")),]
)
})
return(expt_2)
}
#calculating time range per route
master_f <- master_file[ end_date != 20220611  , , ][ , `:=`(
start_time = as.numeric(gsub(arrival_time,pattern = ":",replacement = "")),
end_time =  as.numeric(gsub(departure_time,pattern = ":",replacement = "")),
start_local_hour = as.numeric(str_sub( arrival_time,1,2))
)]
routes_time <-  return_routes_time(master_f = master_f)
routes_daily_stats <- setDT(do.call(rbind.data.frame, routes_time))
routes_daily_stats[ , Day_Type := if_else(Day != "saturday" & Day != "sunday" , "Wkdy","Wknd"), ]
View(routes_daily_stats)
View(trip_shapes)
View(stop_times)
stops_trips <- stop_times[(stop_times$trip_id %in% routes_daily_stats$trp_ids), c(1,4,5,6)]
View(stops_trips)
View(stops)
View(stops_trips)
stops_trips <- left_join(stop_times[(stop_times$trip_id %in% routes_daily_stats$trp_ids), c(1,4,5,6)],
stops[ , c(1,3,5,6), by = "stop_id"])
stops_trips <- left_join(stop_times[(stop_times$trip_id %in% routes_daily_stats$trp_ids), c(1,4,5,6)],
stops[ , c(1,3,5,6)],  by = "stop_id")
View(stops_trips)
class(routes_daily_stats)
routes_daily_stats <- left_join(routes_daily_stats, shapes, by = "shape_id")
routes_time <-  return_routes_time(master_f = master_f)
routes_daily_stats <- setDT(do.call(rbind.data.frame, routes_time))
routes_daily_stats[ , Day_Type := if_else(Day != "saturday" & Day != "sunday" , "Wkdy","Wknd"), ]
View(routes_daily_stats)
library(sf)
library(data.table)
library(lehdr)
library(tidycensus)
library(stringr)
library(dplyr)
library(leaflet)
library(tidyr)
library(htmltools)
library(leaflet)
library(rvest)
library(lubridate)
library(purrr)
library(leafgl)
library(tigris)
library(deckgl)
#library(rdeck)
library(sfheaders)
files_paths <- list.files("C:\\Users\\pgupta\\CTA\\google_transit", full.names = T)
files_names <- list.files("C:\\Users\\pgupta\\CTA\\google_transit")
files <- lapply(files_paths, fread)
names(files) <- gsub(pattern = "\\.txt$", replacement = "", x = files_names)
cta_data <- files
# assigning all the value to the variables
routes <- cta_data[["routes"]]
trips <- cta_data[["trips"]]
calendar <- cta_data[["calendar"]]
stops <- cta_data[["stops"]]
stop_times <- cta_data[["stop_times"]]
shapes <- cta_data[["shapes"]]
#getting one master file
master_file <- left_join(
left_join(
left_join(stop_times,
trips[ , c(1,2,3,6,7)],
by = "trip_id"), stops[,c(1,3,5,6)],
by = "stop_id"), calendar[,c(1:10)], by = "service_id")
#functions
return_tod <- function(day_one, type_of_day){
if(type_of_day != "saturday" & type_of_day != "sunday"){
day_tod <- day_one %>%
mutate(TOD = if_else(start_local_hour >= 4 &
start_local_hour < 6, "Early AM",
if_else(start_local_hour >= 6 &
start_local_hour < 9, "AM-Peak",
if_else(start_local_hour >= 9 &
start_local_hour < 15, "Midday",
if_else(start_local_hour >= 15 &
start_local_hour < 19, "PM-Peak",
if_else(start_local_hour >= 19 &
start_local_hour < 23, "Evening", "Late-Night"
)
} else if(type_of_day == "saturday"){
day_tod <- day_one %>%
mutate(TOD = if_else(start_local_hour >= 4 &
start_local_hour < 8, "SAT-AM",
if_else(start_local_hour >= 8 &
start_local_hour < 20, "SAT-MD",
if_else(start_local_hour >= 20 , "SAT-PM", "Late-Night"
)
} else if(type_of_day == "sunday"){
day_tod <- day_one %>%
mutate(TOD = if_else(start_local_hour >= 0 &
start_local_hour < 5, "SUN-EA",
if_else(start_local_hour >= 5 &
start_local_hour < 9, "SUN-AM",
if_else(start_local_hour >= 9 &
start_local_hour < 18, "SUN-MD", "SUN-PM"
)
}
return(day_tod)
}
return_routes_time <- function( master_f){
days <- c("monday","tuesday","wednesday","thursday",
"friday","saturday","sunday")
days_split <- lapply(days, function(x){
day_one <-   master_f[master_f[[x]] == 1,]
day_one <- return_tod(day_one = day_one, type_of_day = x)
return(day_one)
})
names(days_split) <- days
i <- 0
expt_2 <- lapply(days_split, function(x){
i <<- i + 1
return(
x[ , .(Min_Stop_Sequence = min(stop_sequence),
Max_Stop_Sequence = max(stop_sequence),
Min_Arrival_Time = min(start_time),
Max_Departure_Time = max(end_time),
trips = length(unique(trip_id)),
trp_ids = trip_id[which.max(stop_sequence)],
max_shape_id = shape_id[which.max(stop_sequence)],
max_shape_distance = shape_dist_traveled[which.max(stop_sequence)],
Day = days[i]
),
by = list(route_id, direction, TOD)][ ,
`:=`(Min_Arrival_Time = str_pad(Min_Arrival_Time,6,side = "left",pad = "0"),
Max_Departure_Time = str_pad(Max_Departure_Time,6,side = "left",pad = "0")),]
)
})
return(expt_2)
}
#calculating time range per route
master_f <- master_file[ end_date != 20220611  , , ][ , `:=`(
start_time = as.numeric(gsub(arrival_time,pattern = ":",replacement = "")),
end_time =  as.numeric(gsub(departure_time,pattern = ":",replacement = "")),
start_local_hour = as.numeric(str_sub( arrival_time,1,2))
)]
routes_time <-  return_routes_time(master_f = master_f)
routes_daily_stats <- setDT(do.call(rbind.data.frame, routes_time))
routes_daily_stats[ , Day_Type := if_else(Day != "saturday" & Day != "sunday" , "Wkdy","Wknd"), ]
routes_daily_stats <- left_join(routes_daily_stats, shapes, by = c("max_shape_id"= "shape_id"))
stops_trips <- left_join(stop_times[(stop_times$trip_id %in% routes_daily_stats$trp_ids), c(1,4,5,6)],
stops[ , c(1,3,5,6)],  by = "stop_id")
class(routes_daily_stats)
?st_as_sf
View(shapes)
routes_daily_stats <- st_as_sf(left_join(routes_daily_stats, trip_shapes, by = c("max_shape_id"= "shape_id")),
sf_column_name = "geometry", crs = 4326)
routes_daily_stats <- st_as_sf(left_join(routes_daily_stats, trip_shapes, by = c("max_shape_id"= "shape_id")),
sf_column_name = "geometry", crs = 4326)
stops_trips <- left_join(stop_times[(stop_times$trip_id %in% routes_daily_stats$trp_ids), c(1,4,5,6)],
stops[ , c(1,3,5,6)],  by = "stop_id")
library(sf)
library(data.table)
library(lehdr)
library(tidycensus)
library(stringr)
library(dplyr)
library(leaflet)
library(tidyr)
library(htmltools)
library(leaflet)
library(rvest)
library(lubridate)
library(purrr)
library(leafgl)
library(tigris)
library(deckgl)
#library(rdeck)
library(sfheaders)
files_paths <- list.files("C:\\Users\\pgupta\\CTA\\google_transit", full.names = T)
files_names <- list.files("C:\\Users\\pgupta\\CTA\\google_transit")
files <- lapply(files_paths, fread)
names(files) <- gsub(pattern = "\\.txt$", replacement = "", x = files_names)
cta_data <- files
# assigning all the value to the variables
routes <- cta_data[["routes"]]
trips <- cta_data[["trips"]]
calendar <- cta_data[["calendar"]]
stops <- cta_data[["stops"]]
stop_times <- cta_data[["stop_times"]]
shapes <- cta_data[["shapes"]]
#getting one master file
master_file <- left_join(
left_join(
left_join(stop_times,
trips[ , c(1,2,3,6,7)],
by = "trip_id"), stops[,c(1,3,5,6)],
by = "stop_id"), calendar[,c(1:10)], by = "service_id")
#functions
return_tod <- function(day_one, type_of_day){
if(type_of_day != "saturday" & type_of_day != "sunday"){
day_tod <- day_one %>%
mutate(TOD = if_else(start_local_hour >= 4 &
start_local_hour < 6, "Early AM",
if_else(start_local_hour >= 6 &
start_local_hour < 9, "AM-Peak",
if_else(start_local_hour >= 9 &
start_local_hour < 15, "Midday",
if_else(start_local_hour >= 15 &
start_local_hour < 19, "PM-Peak",
if_else(start_local_hour >= 19 &
start_local_hour < 23, "Evening", "Late-Night"
)
} else if(type_of_day == "saturday"){
day_tod <- day_one %>%
mutate(TOD = if_else(start_local_hour >= 4 &
start_local_hour < 8, "SAT-AM",
if_else(start_local_hour >= 8 &
start_local_hour < 20, "SAT-MD",
if_else(start_local_hour >= 20 , "SAT-PM", "Late-Night"
)
} else if(type_of_day == "sunday"){
day_tod <- day_one %>%
mutate(TOD = if_else(start_local_hour >= 0 &
start_local_hour < 5, "SUN-EA",
if_else(start_local_hour >= 5 &
start_local_hour < 9, "SUN-AM",
if_else(start_local_hour >= 9 &
start_local_hour < 18, "SUN-MD", "SUN-PM"
)
}
return(day_tod)
}
return_routes_time <- function( master_f){
days <- c("monday","tuesday","wednesday","thursday",
"friday","saturday","sunday")
days_split <- lapply(days, function(x){
day_one <-   master_f[master_f[[x]] == 1,]
day_one <- return_tod(day_one = day_one, type_of_day = x)
return(day_one)
})
names(days_split) <- days
i <- 0
expt_2 <- lapply(days_split, function(x){
i <<- i + 1
return(
x[ , .(Min_Stop_Sequence = min(stop_sequence),
Max_Stop_Sequence = max(stop_sequence),
Min_Arrival_Time = min(start_time),
Max_Departure_Time = max(end_time),
trips = length(unique(trip_id)),
trp_ids = trip_id[which.max(stop_sequence)],
max_shape_id = shape_id[which.max(stop_sequence)],
max_shape_distance = shape_dist_traveled[which.max(stop_sequence)],
Day = days[i]
),
by = list(route_id, direction, TOD)][ ,
`:=`(Min_Arrival_Time = str_pad(Min_Arrival_Time,6,side = "left",pad = "0"),
Max_Departure_Time = str_pad(Max_Departure_Time,6,side = "left",pad = "0")),]
)
})
return(expt_2)
}
#calculating time range per route
master_f <- master_file[ end_date != 20220611  , , ][ , `:=`(
start_time = as.numeric(gsub(arrival_time,pattern = ":",replacement = "")),
end_time =  as.numeric(gsub(departure_time,pattern = ":",replacement = "")),
start_local_hour = as.numeric(str_sub( arrival_time,1,2))
)]
routes_time <-  return_routes_time(master_f = master_f)
routes_daily_stats <- setDT(do.call(rbind.data.frame, routes_time))
routes_daily_stats[ , Day_Type := if_else(Day != "saturday" & Day != "sunday" , "Wkdy","Wknd"), ]
routes_daily_stats_shapes <- left_join(routes_daily_stats, trip_shapes, by = c("max_shape_id"= "shape_id"))
stops_trips <- left_join(stop_times[(stop_times$trip_id %in% routes_daily_stats$trp_ids), c(1,4,5,6)],
stops[ , c(1,3,5,6)],  by = "stop_id")
leaflet() %>% addTiles() %>%
addPolylines(data = routes_daily_stats_shapes)
routes_daily_stats_shapes <-st_as_sf(left_join(routes_daily_stats, trip_shapes,
by = c("max_shape_id"= "shape_id")),
crs = 4326, sf_column_name = "geometry")
leaflet() %>% addTiles() %>%
addPolylines(data = routes_daily_stats_shapes)
setDT(unique(routes_daily_stats$max_shape_id))
setDT(list(unique(routes_daily_stats$max_shape_id)))
shapes_routes <- setDT(list(unique(routes_daily_stats$max_shape_id)))
View(shapes_routes)
View(trip_shapes)
shapes_routes <- setDT(list(unique(routes_daily_stats$max_shape_id)))
routes_daily_stats_shapes <-st_as_sf(left_join(shapes_routes, trip_shapes,
by = c("V1"= "shape_id")),
crs = 4326, sf_column_name = "geometry")
leaflet() %>% addTiles() %>%
addPolylines(data = routes_daily_stats_shapes)
leaflet() %>% addTiles() %>%
addPolylines(data = routes_daily_stats_shapes) %>%
addCircleMarkers(data = stops_trips, lng = stops_trips$stop_lon,
lat = stops_trips$stop_lon)
View(stops_trips)
View(stop_times)
stops_trips <- setDT(unique(stop_times$stop_id[(stop_times$trip_id %in% routes_daily_stats$trp_ids)]))
stops_trips <- setDT(list(unique(stop_times$stop_id[(stop_times$trip_id %in% routes_daily_stats$trp_ids)])))
View(stops_trips)
stops_trips <- left_join(stops_tripd,
stops[ , c(1,3,5,6)],  by =c("V1" = "stop_id"))
View(stops)
stops_trips <- left_join(stops_trips,
stops[ , c(1,3,5,6)],
by =c("V1" = "stop_id"))
leaflet() %>% addTiles() %>%
addPolylines(data = routes_daily_stats_shapes) %>%
addCircleMarkers(data = stops_trips, lng = stops_trips$stop_lon,
lat = stops_trips$stop_lon)
leaflet() %>% addTiles() %>%
addPolylines(data = routes_daily_stats_shapes) %>%
addCircleMarkers(data = stops_trips)
leaflet() %>% addTiles() %>%
addPolylines(data = routes_daily_stats_shapes) %>%
addCircleMarkers(data = stops_trips,
lat = stops_trips$stop_lat, lng = stops_trips$stop_lon)
leaflet() %>% addTiles() %>%
addPolylines(data = routes_daily_stats_shapes, weight = 1) %>%
addCircleMarkers(data = stops_trips,
lat = stops_trips$stop_lat, lng = stops_trips$stop_lon,
radius = 2)
?blocks
b_17031 <- blocks(state = "17", county = "031", year = 2021)
leaflet() %>% addTiles() %>%
addPolylines(data = routes_daily_stats_shapes, weight = 1) %>%
addCircleMarkers(data = stops_trips,
lat = stops_trips$stop_lat, lng = stops_trips$stop_lon,
radius = 2) %>%
addPolygons(data = st_transform(b_17031, 4326), weight = 1,
fillOpacity = 0)
rm(list = ls())
gc()
